saveRDS(full_corpus_sents, "corpora/full_corpus_sents.rds")
saveRDS(pro_corpus, "corpora/pro_corpus.rds")
saveRDS(contra_corpus, "corpora/contra_corpus.rds")
saveRDS(pro2000, "corpora/pro2000.rds")
saveRDS(pro1000, "corpora/pro1000.rds")
saveRDS(contra2000, "corpora/contra2000.rds")
saveRDS(contra1000, "corpora/contra1000.rds")
# activists
saveRDS(fff_de_corpus, "corpora/fff_de_corpus.rds")
saveRDS(ikem_corpus, "corpora/ikem_corpus.rds")
saveRDS(klimarep_corpus, "corpora/klimarep_corpus.rds")
saveRDS(klimafakten_corpus, "corpora/klimafakten_corpus.rds")
saveRDS(zero_corpus, "corpora/zero_corpus.rds")
saveRDS(komma_corpus, "corpora/komma_corpus.rds")
# skeptics
saveRDS(eike_corpus, "corpora/eike_corpus.rds")
saveRDS(ffh_corpus, "corpora/ffh_corpus.rds")
# load corpus files
full_corpus = readRDS("corpora/full_corpus.rds")
full_corpus_sents = readRDS("corpora/full_corpus_sents.rds")
pro_corpus = readRDS("corpora/pro_corpus.rds")
contra_corpus = readRDS("corpora/contra_corpus.rds")
pro2000 = readRDS("corpora/pro2000.rds")
pro1000 = readRDS("corpora/pro1000.rds")
contra2000 = readRDS("corpora/contra2000.rds")
contra1000 = readRDS("corpora/contra1000.rds")
fff_de_corpus = readRDS("corpora/fff_de_corpus.rds")
ikem_corpus = readRDS("corpora/ikem_corpus.rds")
klimarep_corpus = readRDS("corpora/klimarep_corpus.rds")
klimafakten_corpus = readRDS("corpora/klimafakten_corpus.rds")
zero_corpus = readRDS("corpora/zero_corpus.rds")
komma_corpus = readRDS("corpora/komma_corpus.rds")
eike_corpus = readRDS("corpora/eike_corpus.rds")
ffh_corpus = readRDS("corpora/ffh_corpus.rds")
summary(pro1000, n=10)
contra_sents <- corpus_subset(contra_corpus, summary(contra_corpus)$Sentences >= 20, drop_docid = TRUE)
contra_sents
summary(contra_sents)
summary(contra_sents, n =20)
contra_sents <- corpus_subset(contra_corpus, summary(contra_corpus)$Sentences < 20, drop_docid = TRUE)
summary(contra_sents, n=20)
contra_sents <- corpus_subset(contra_corpus, summary(contra_corpus)$Sentences > 20, drop_docid = TRUE)
summary(contra_sents, n =20)
summary(contra_sents)
corpus_subset(contra_corpus, summary(contra_corpus)$Sentences > 20, drop_docid = TRUE)
summary(corpus_subset(contra_corpus, summary(contra_corpus)$Sentences > 20, drop_docid = TRUE))
summary(corpus_subset(contra_corpus, summary(contra_corpus)$Sentences > 50, drop_docid = TRUE))
summary(corpus_subset(contra_corpus, summary(contra_corpus)$Sentences > 50))
info_contrasents <- summary(contra_corpus$Sentences)
info_contrasents
info_contrasents <- summary(contra_corpus)$Sentences
info_contrasents
info_contrasents > 20
summary(corpus_subset(contra_corpus, info_contrasents > 20))
corpus_subset(contra_corpus, info_contrasents > 20))
corpus_subset(contra_corpus, info_contrasents > 20)
corpus_subset(contra_corpus, info_contrasents > 10)
corpus_subset(contra_corpus, info_contrasents >= 10)
corpus_subset(contra_corpus, info_contrasents >= 50)
corpus_subset(contra_corpus, info_contrasents >= 20)
corpus_subset(contra_corpus, info_contrasents >= 50)
corpus_subset(pro_corpus, summary(pro_corpus)$Sentences >= 50)
corpus_subset(pro_corpus, summary(pro_corpus)$Sentences >= 20)
summary(corpus_subset(pro_corpus, summary(pro_corpus)$Sentences >= 20))
summary(pro_corpus)$Sentences >= 20)
summary(pro_corpus)$Sentences >= 20
x = summary(pro_corpus)$Sentences >= 20
x
x
summary(pro2000, n=5)
ikem_corpus$Sentences
summary(ikem_corpus$Sentences)
summary(ikem_corpus)$Sentences
summary(ikem_corpus)$Sentences > 10
ikem_sents <- summary(ikem_corpus)$Sentences > 10
ikem_sents
ikem_sents <- corpus_subset(ikem_corpus, summary(ikem_corpus)$Sentences > 10)
ikem_Sents
ikem_sents
summary(ikem_sents)
ikem_sents <- corpus_subset(ikem_corpus, summary(ikem_corpus)$Sentences > 10, drop_docid=TRUE)
summary(ikem_sents)
summary(ikem_corpus)
ikem_sents <- corpus_subset(ikem_corpus, summary(ikem_corpus)$Sentences > 10, drop_docid=FALSE)
summary(ikem_sents)
ikem_sents <- corpus_subset(ikem_corpus, summary(ikem_corpus)$Sentences >= 10, drop_docid=FALSE)
summary(ikem_sents)
docvars(ikem_sents, "sents") <- summary(ikem_sents)$Sentences
ikem_2 <- ikem_corpus
docvars(ikem_2, "sents") <- summary(ikem_2)$Sentences
docvars(ikem_2, "sents") <- summary(ikem_2, n=1313)$Sentences
summary(ikem_2)
ikem_sents <- corpus_subset(ikem_2, sents >= 10)
summary(ikem_sents)
pro_corpus
summary(pro_corpus)
pro_sents <- summary(pro_corpus, n=2002)$Sentences
summary(pro_sents)
pro_sents
pro_long <- corpus_subset(pro_corpus, pro_sents >= 10)
pro_long
summary(pro_long)
summary(pro_long)$Sentences < 10
summary(pro_long)$Sentences > 10
summary(pro_long)$Sentences >= 10
> pro_long <- corpus_subset(pro_corpus, pro_sents >= 10, drop_docid=TRUE)
pro_long <- corpus_subset(pro_corpus, pro_sents >= 10, drop_docid=TRUE)
summary(pro_long)
pro_long <- corpus_subset(pro_corpus, pro_sents >= 10, drop_docid=TRUE)
contra_corpus
# get "Sentences" info from summary
p_sents <- summary(pro_corpus, n=2002)$Sentences
# create subset from all entries with 10 or more sentences
pro_sents <- corpus_subset(pro_corpus, p_sents >= 10, drop_docid=TRUE)
# get "Sentences" info from summary
c_sents <- summary(contra_corpus, n=13384)$Sentences
# create subset from all entries with 10 or more sentences
contra_sents <- corpus_subset(contra_corpus, c_sents >= 10, drop_docid=TRUE)
pro_sents
contra_sents
# get random sample corpus for activists
pro2000 <- corpus_sample(pro_corpus, size = 2000)
# and for long docs
pro900 <- corpus_sample(pro_sents, size = 900)
# get random sample corpus for sceptics
contra2000 <- corpus_sample(contra_corpus, size = 2000)
# and for long docs
contra900 <- corpus_sample(contra_sents, size = 900)
# get "full" corpus with pro and contra sample
full_corpus <- pro2000+contra2000
full_corpus_sents <- pro900+contra900
full_corpus_sents
full_corpus
# save corpus as .rds file for later use
saveRDS(full_corpus, "corpora/full_corpus.rds")
saveRDS(full_corpus_sents, "corpora/full_corpus_sents.rds")
saveRDS(pro_corpus, "corpora/pro_corpus.rds")
saveRDS(contra_corpus, "corpora/contra_corpus.rds")
saveRDS(pro2000, "corpora/pro2000.rds")
saveRDS(pro900, "corpora/pro900.rds")
saveRDS(contra2000, "corpora/contra2000.rds")
saveRDS(contra900, "corpora/contra900.rds")
# activists
saveRDS(fff_de_corpus, "corpora/fff_de_corpus.rds")
saveRDS(ikem_corpus, "corpora/ikem_corpus.rds")
saveRDS(klimarep_corpus, "corpora/klimarep_corpus.rds")
saveRDS(klimafakten_corpus, "corpora/klimafakten_corpus.rds")
saveRDS(zero_corpus, "corpora/zero_corpus.rds")
saveRDS(komma_corpus, "corpora/komma_corpus.rds")
# skeptics
saveRDS(eike_corpus, "corpora/eike_corpus.rds")
saveRDS(ffh_corpus, "corpora/ffh_corpus.rds")
# load corpus files
full_corpus = readRDS("corpora/full_corpus.rds")
full_corpus_sents = readRDS("corpora/full_corpus_sents.rds")
pro_corpus = readRDS("corpora/pro_corpus.rds")
contra_corpus = readRDS("corpora/contra_corpus.rds")
pro2000 = readRDS("corpora/pro2000.rds")
pro1000 = readRDS("corpora/pro1000.rds")
contra2000 = readRDS("corpora/contra2000.rds")
contra1000 = readRDS("corpora/contra1000.rds")
fff_de_corpus = readRDS("corpora/fff_de_corpus.rds")
ikem_corpus = readRDS("corpora/ikem_corpus.rds")
klimarep_corpus = readRDS("corpora/klimarep_corpus.rds")
klimafakten_corpus = readRDS("corpora/klimafakten_corpus.rds")
zero_corpus = readRDS("corpora/zero_corpus.rds")
komma_corpus = readRDS("corpora/komma_corpus.rds")
eike_corpus = readRDS("corpora/eike_corpus.rds")
ffh_corpus = readRDS("corpora/ffh_corpus.rds")
# load corpus files
full_corpus = readRDS("corpora/full_corpus.rds")
full_corpus_sents = readRDS("corpora/full_corpus_sents.rds")
pro_corpus = readRDS("corpora/pro_corpus.rds")
contra_corpus = readRDS("corpora/contra_corpus.rds")
pro2000 = readRDS("corpora/pro2000.rds")
pro900 = readRDS("corpora/pro900.rds")
contra2000 = readRDS("corpora/contra2000.rds")
contra900 = readRDS("corpora/contra900.rds")
fff_de_corpus = readRDS("corpora/fff_de_corpus.rds")
ikem_corpus = readRDS("corpora/ikem_corpus.rds")
klimarep_corpus = readRDS("corpora/klimarep_corpus.rds")
klimafakten_corpus = readRDS("corpora/klimafakten_corpus.rds")
zero_corpus = readRDS("corpora/zero_corpus.rds")
komma_corpus = readRDS("corpora/komma_corpus.rds")
eike_corpus = readRDS("corpora/eike_corpus.rds")
ffh_corpus = readRDS("corpora/ffh_corpus.rds")
# load libraries
library(quanteda)
library(readtext)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tidyverse)
library(tm)
library("textcat")
library("quanteda.textplots")
library("quanteda.textstats")
pro2000_sum <- summary(pro2000)
ggplot(pro2000_sum, aes(id, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
pro_sum <- summary(pro_corpus)
pro_sum <- summary(pro_corpus)
ggplot(pro_sum, aes(id, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
summary(pro_corpus, n=5)
docvars(pro_corpus, "id") <- paste(1:ndoc(pro_corpus))
summary(pro_corpus, n=10)
# build a pro corpus for all pro texts with "pro" group
pro_corpus <- fff_de_corpus+ikem_corpus+klimarep_corpus+klimafakten_corpus+zero_corpus+komma_corpus
docvars(pro_corpus, "group") <- "activists"
docvars(pro_corpus, "id") <- paste(1:ndoc(pro_corpus))
# sceptics corpus with "sceptics" group
contra_corpus <- eike_corpus+ffh_corpus
docvars(contra_corpus, "group") <- "sceptics"
docvars(contra_corpus, "id") <- paste(1:ndoc(contra_corpus))
summary(contra_corpus, n=10)
ndoc(contra_corpus)
# get "Sentences" info from summary
p_sents <- summary(pro_corpus, n=ndoc(pro_corpus))$Sentences
# create subset from all entries with 10 or more sentences
pro_sents <- corpus_subset(pro_corpus, p_sents >= 10, drop_docid=TRUE)
# get "Sentences" info from summary
c_sents <- summary(contra_corpus, n=ndoc(contra_corpus))$Sentences
# build a pro corpus for all pro texts with "pro" group
pro_corpus <- fff_de_corpus+ikem_corpus+klimarep_corpus+klimafakten_corpus+zero_corpus+komma_corpus
docvars(pro_corpus, "group") <- "activists"
#docvars(pro_corpus, "id") <- paste(1:ndoc(pro_corpus))
# sceptics corpus with "sceptics" group
contra_corpus <- eike_corpus+ffh_corpus
docvars(contra_corpus, "group") <- "sceptics"
#docvars(contra_corpus, "id") <- paste(1:ndoc(contra_corpus))
summary(contra_corpus, n=10)
# get "Sentences" info from summary
p_sents <- summary(pro_corpus, n=ndoc(pro_corpus))$Sentences
# create subset from all entries with 10 or more sentences
pro_sents <- corpus_subset(pro_corpus, p_sents >= 10, drop_docid=TRUE)
# get "Sentences" info from summary
c_sents <- summary(contra_corpus, n=ndoc(contra_corpus))$Sentences
# create subset from all entries with 10 or more sentences
contra_sents <- corpus_subset(contra_corpus, c_sents >= 10, drop_docid=TRUE)
# get random sample corpus for activists
pro2000 <- corpus_sample(pro_corpus, size = 2000)
# and for long docs
pro900 <- corpus_sample(pro_sents, size = 900)
# get random sample corpus for sceptics
contra2000 <- corpus_sample(contra_corpus, size = 2000)
# and for long docs
contra900 <- corpus_sample(contra_sents, size = 900)
# get "full" corpus with pro and contra sample
full_corpus <- pro2000+contra2000
full_corpus_sents <- pro900+contra900
# get id number for corpus
docvars(pro2000, "id") <- paste(1:ndoc(pro2000))
docvars(pro900, "id") <- paste(1:ndoc(pro900))
docvars(contra2000, "id") <- paste(1:ndoc(contra2000))
docvars(contra900, "id") <- paste(1:ndoc(contra900))
# save corpus as .rds file for later use
saveRDS(full_corpus, "corpora/full_corpus.rds")
saveRDS(full_corpus_sents, "corpora/full_corpus_sents.rds")
saveRDS(pro_corpus, "corpora/pro_corpus.rds")
saveRDS(contra_corpus, "corpora/contra_corpus.rds")
saveRDS(pro2000, "corpora/pro2000.rds")
saveRDS(pro900, "corpora/pro900.rds")
saveRDS(contra2000, "corpora/contra2000.rds")
saveRDS(contra900, "corpora/contra900.rds")
# activists
saveRDS(fff_de_corpus, "corpora/fff_de_corpus.rds")
saveRDS(ikem_corpus, "corpora/ikem_corpus.rds")
saveRDS(klimarep_corpus, "corpora/klimarep_corpus.rds")
saveRDS(klimafakten_corpus, "corpora/klimafakten_corpus.rds")
saveRDS(zero_corpus, "corpora/zero_corpus.rds")
saveRDS(komma_corpus, "corpora/komma_corpus.rds")
# skeptics
saveRDS(eike_corpus, "corpora/eike_corpus.rds")
saveRDS(ffh_corpus, "corpora/ffh_corpus.rds")
# load corpus files
full_corpus = readRDS("corpora/full_corpus.rds")
full_corpus_sents = readRDS("corpora/full_corpus_sents.rds")
pro_corpus = readRDS("corpora/pro_corpus.rds")
contra_corpus = readRDS("corpora/contra_corpus.rds")
pro2000 = readRDS("corpora/pro2000.rds")
pro900 = readRDS("corpora/pro900.rds")
contra2000 = readRDS("corpora/contra2000.rds")
contra900 = readRDS("corpora/contra900.rds")
fff_de_corpus = readRDS("corpora/fff_de_corpus.rds")
ikem_corpus = readRDS("corpora/ikem_corpus.rds")
klimarep_corpus = readRDS("corpora/klimarep_corpus.rds")
klimafakten_corpus = readRDS("corpora/klimafakten_corpus.rds")
zero_corpus = readRDS("corpora/zero_corpus.rds")
komma_corpus = readRDS("corpora/komma_corpus.rds")
eike_corpus = readRDS("corpora/eike_corpus.rds")
ffh_corpus = readRDS("corpora/ffh_corpus.rds")
# Exploring the corpus
## Corpus statistics
```{r}
summary(pro_corpus, n=5)
summary(pro2000, n=5)
ggplot(pro2000_sum, aes(id, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
summary(pro2000)$id
pro2000_sum$id
pro2000_sum <- summary(pro2000)
ggplot(pro2000, aes(id, pro2000_sum$Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
pro2000_sum <- summary(pro2000)
ggplot(pro2000_sum, aes(Text, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
pro2000_sum <- summary(pro2000)
ggplot(pro2000_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
pro900_sum <- summary(pro900)
ggplot(pro900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens per Textfile")
ggplot(pro900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences per Textfile")
pro900_sum <- summary(pro900)
contra900_sum <- summary(contra900)
ggplot(pro900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences per Textfile")
ggplot(contra900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences per Textfile")
pro900_sum <- summary(pro900)
contra900_sum <- summary(contra900)
ggplot(pro900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(contra900_sum, aes(Text, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Contra900")
ggplot(pro900_sum, aes(x=as.numeric(row.names(Text)), Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(pro900_sum, aes(x = 1:nrow(pro900), Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(pro900_sum, aes(x = 1:ndoc(pro900), Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(pro900_sum, aes(x = paste(1:ndoc(pro900)), Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(pro900_sum, aes(x = 1:ndoc(pro900), Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
1:ndoc(pro900)
# to get index number
#1:ndoc(pro900)
# to get index number
id_pro = 1:ndoc(pro900)
ggplot(pro900_sum, aes(id_pro, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
# to get index number
id_pro = 1:ndoc(summary(pro900))
# to get index number
id_pro = 1:ndoc(pro900_sum)
# to get index number
id_pro = 1:ndoc(pro900)
ggplot(pro900_sum, aes(id_pro[:100], Sentences, group=1)) +
ggplot(pro900_sum, aes(id_pro[1:100], Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
pro900_sum
pro900_sum$id
ggplot(pro900_sum, aes(pro900_sum$id, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
pro900_sum <- summary(pro900)
contra900_sum <- summary(contra900)
#id_pro[1:100]
ggplot(pro900_sum, aes(pro900_sum$id, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro900")
ggplot(contra900_sum, aes(contra900_sum$id, Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Contra900")
# to get index number
#id_pro = 1:ndoc(pro900)
ggplot(pro900_sum, aes(pro900_sum$id, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens Pro900")
ggplot(contra900_sum, aes(contra900_sum$id, Tokens, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Tokens Contra900")
ggplot(pro900_sum, aes(pro900_sum$id, Types, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Types Pro900")
ggplot(contra900_sum, aes(contra900_sum$id, Types, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Types Contra900")
ggplot(pro900_sum, aes(Tokens, Types, group=1, label= id)) +
geom_smooth(method = "lm", formula ="y ~ x", se = FALSE) +
geom_text(check_overlap = T) +
ggtitle("Type-Token-Relation Pro900")
ggplot(contra900_sum, aes(Tokens, Types, group=1, label= id)) +
geom_smooth(method = "lm", formula ="y ~ x", se = FALSE) +
geom_text(check_overlap = T) +
ggtitle("Type-Token-Relation Contra900")
pro2000_sum <- summary(pro2000)
contra2000_sum <- summary(contra2000)
#to get id as x axis
#id_pro[1:100]
#contra900_sum$id
ggplot(pro2000_sum, aes(id_pro[1:2000], Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro2000")
pro2000_sum <- summary(pro2000)
contra2000_sum <- summary(contra2000)
#to get id as x axis
#id_pro[1:100]
#contra900_sum$id
ggplot(pro2000_sum, aes(id_pro[1:100], Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro2000")
ggplot(contra2000_sum, aes(id_pro[1:100], Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Contra2000")
pro2000
pro2000
summary(pro2000)$Sentences
pro2000$Sentences
sents = summary(pro2000$Sentences)
sents
sents = summary(pro2000)$Sentences
sents
sents()
mean(sents)
sents
sents = summary(pro2000, n=ndoc(pro2000))$Sentences
sents
mean(sents)
sents = summary(contra2000, n=ndoc(contra2000))$Sentences
sents
mean(sents)
sents = summary(pro_corpus, n=ndoc(pro_corpus))$Sentences
sents
mean(sents)
sents = summary(contra_corpus, n=ndoc(contra_corpus))$Sentences
mean(sents)
ggplot(pro2000, aes(id_pro[1:2000], summary(pro2000, n=ndoc(pro2000))$Sentences, group=1)) +
geom_line() +
geom_point() +
theme(axis.text.x = element_text(angle=0, vjust=1, hjust=1)) +
ggtitle("Sentences Pro2000")
