sentiment <- convert(de_props, "data.frame") %>%
mutate(doc_id = as_factor(doc_id)) %>%
rename(Roman = doc_id)
ggplot(sentiment, aes(Roman, Sentiment, colour = Polarität, group = origin)) +
geom_line(size = 1) +
scale_colour_brewer(palette = "Set1") +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +
ggtitle("Sentiment-Scores in zwölf Sherlock Holmes-Romanen (relativ)")
de_freqs1 <- textstat_frequency(de_props, groups=origin)
de_freqs1
de_props
de_df <- convert(de_props, "data.frame") %>%
de_df
de_df <- convert(de_props, "data.frame") %>%
de_df
de_df()
de_dataf <- convert(de_props, "data.frame") %>%
de_dataf
convert(de_props, "data.frame") %>%
df <- convert(de_props, "data.frame")
df <- convert(de_props, to = "data.frame")
df
de_props
de_freqs
fff_dfm <- dfm(fff_corpus, remove = en_stopwords, stem = FALSE, remove_punct = TRUE, remove_numbers=TRUE)
fff_dfm
eike_dfm <- dfm(eike_corpus, remove = de_stopwords, stem = FALSE, remove_punct = TRUE, remove_numbers=TRUE)
eike_dfm
klimarep_dfm <- dfm(klimarep_corpus, remove = de_stopwords, stem = FALSE, remove_punct = TRUE, remove_numbers=TRUE)
klimarep_dfm
fff_climate <- dfm_select(fff_dfm, pattern ="climat*")
eike_klima <- dfm_select(eike_dfm, pattern ="klima*")
klimarep_klima <- dfm_select(klimarep_dfm, pattern="klima*")
fff_climate
klima1 <- topfeatures(eike_klima, 100)
klima2 <- topfeatures(klimarep_klima, 100)
klima1
klima2
klima1_dfm <- textstat_frequency(eike_klima, n=100)
klima2_dfm <- textstat_frequency(klimarep_klima, n=100)
plot_eike <- with(klima1_dfm, reorder(feature, -frequency))
plot_klimarep <- with(klima2_dfm, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot1 <- ggplot(klima1_dfm, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot1
#create plot for klimareporter klima words frequencies
plot2 <- ggplot(klima2_dfm, aes(x=feature, y=frequency)) +
geom_point()+ ggtitle("Klimareporter 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
ggsave(plot=plot2, width = 10, height = 5, dpi=300, filename="klima_klimarep_plot.jpeg" )
plot2
fff_weight <- dfm_weight(fff_dfm, scheme="prop")
topfeatures(fff_weight)
eike_tfidf <- dfm_tfidf(eike_dfm)
topfeatures(eike_tfidf, n=50)
klimarep_tfidf <- dfm_tfidf(klimarep_dfm)
topfeatures(klimarep_tfidf, n=50)
#jpeg("fff_top50.jpeg", width=600, height=600)
textplot_wordcloud(fff_dfm, min_size=1, max_words=50,colors = RColorBrewer::brewer.pal(8, "Dark2") )
#dev.off()
#jpeg("eike_top50.jpeg", width=600, height=600)
textplot_wordcloud(eike_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
#jpeg("klimarep_top50.jpeg", width=600, height=600)
textplot_wordcloud(klimarep_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
#jpeg("klimarep_top50.jpeg", width=600, height=600)
textplot_wordcloud(klimarep_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
textplot_wordcloud(klima2_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#jpeg("klimarep_top50.jpeg", width=600, height=600)
textplot_wordcloud(klimarep_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
textplot_wordcloud(klimarep_klima, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#jpeg("eike_top50.jpeg", width=600, height=600)
textplot_wordcloud(eike_dfm, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
textplot_wordcloud(eike_klima, min_size=1, max_words=50, colors = RColorBrewer::brewer.pal(8, "Dark2"))
fff_climate <- dfm_select(fff_dfm, pattern ="climat*")
eike_klima <- dfm_select(eike_dfm, pattern ="klima*")
klimarep_klima <- dfm_select(klimarep_dfm, pattern="klima*")
fff_climate
klima1 <- topfeatures(eike_klima, 100)
klima2 <- topfeatures(klimarep_klima, 100)
klima1
klima2
klimarep_dfm <- dfm(klimarep_corpus, remove = de_stopwords, stem=FALSE, remove_punct = TRUE, remove_numbers=TRUE)
klimarep_dfm
klimarep_dfm <- dfm(klimarep_corpus, remove = de_stopwords, remove_punct = TRUE, remove_numbers=TRUE)
klimarep_dfm
eike_dfm <- dfm(eike_corpus, remove = de_stopwords, remove_punct = TRUE, remove_numbers=TRUE)
eike_dfm
fff_climate <- dfm_select(fff_dfm, pattern ="climat*")
eike_klima <- dfm_select(eike_dfm, pattern ="klima*")
klimarep_klima <- dfm_select(klimarep_dfm, pattern="klima*")
fff_climate
klima1 <- topfeatures(eike_klima, 100)
klima2 <- topfeatures(klimarep_klima, 100)
klima1
klima2
klima1_dfm <- textstat_frequency(eike_klima, n=100)
klima2_dfm <- textstat_frequency(klimarep_klima, n=100)
plot_eike <- with(klima1_dfm, reorder(feature, -frequency))
plot_klimarep <- with(klima2_dfm, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot1 <- ggplot(klima1_dfm, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot1
#create plot for klimareporter klima words frequencies
plot2 <- ggplot(klima2_dfm, aes(x=feature, y=frequency)) +
geom_point()+ ggtitle("Klimareporter 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
ggsave(plot=plot2, width = 10, height = 5, dpi=300, filename="klima_klimarep_plot.jpeg" )
plot2
fff_weight <- dfm_weight(fff_dfm, scheme="prop")
topfeatures(fff_weight)
keyness_eike <- textstat_keyness(eike_klima)
keyness_eike <- textstat_keyness(eike_klima)
keyness_eike
keyness_eike <- textstat_keyness(eike_klima)
textplot_keyness(keyness_eike)
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
textplot_keyness(eike_weight_klima)
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(plot_eike2, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(eike_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
#ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot3
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima, n=100)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(eike_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
#ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot3
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima, n=100)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(eike_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
#ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot3
eike_relfreq
dfm_weight(eike_klima, scheme="prop")
eike_weight <- dfm_weight(eike_klima, scheme="prop")
textstat_frequency(eike_weight)
dfm_tfidf(eike_weight)
dfm_tfidf(eike_weight, force=TRUE)
new_eike <- dfm_tfidf(eike_weight, force=TRUE)
textstat_frequency(new_eike)
eike_freq <- textstat_frequency(new_eike)
textstat_frequency(new_eike, force=TRUE)
eike_weight <- dfm_weight(eike_klima, scheme="prop")
eike_weight
topfeatures(eike_weight)
eike_klima
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima, n=100)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(eike_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
#ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot3
eike_relfreq
klimarep_weight_klima <- dfm_weight(klimarep_klima, scheme="prop")
klimarep_relfreq <- textstat_frequency(klimarep_weight_klima, n=100)
plot_klimarep2 <- with(klimarep_relfreq, reorder(feature, -frequency))
#create plot for klimareporter klima words frequencies
plot4 <- ggplot(klimarep_weight_klima, aes(x=feature, y=frequency)) +
geom_point()+ ggtitle("Klimareporter 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
eike_weight_klima <- dfm_weight(eike_klima, scheme="prop")
eike_weight_klima
eike_relfreq <- textstat_frequency(eike_weight_klima, n=100)
plot_eike2 <- with(eike_relfreq, reorder(feature, -frequency))
#create plot for eike klima words frequencies
plot3 <- ggplot(eike_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ggtitle("EIKE 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
#ggsave(plot=plot1, width = 10, height = 5, dpi=300, filename="klima_eike_plot.jpeg" )
plot3
eike_relfreq
klimarep_weight_klima <- dfm_weight(klimarep_klima, scheme="prop")
klimarep_relfreq <- textstat_frequency(klimarep_weight_klima, n=100)
plot_klimarep2 <- with(klimarep_relfreq, reorder(feature, -frequency))
#create plot for klimareporter klima words frequencies
plot4 <- ggplot(klimarep_relfreq, aes(x=feature, y=frequency)) +
geom_point()+ ggtitle("Klimareporter 'Klima' Frequencies")+
theme(axis.text.x = element_text(angle=90,hjust=1))
plot4
de_corpus <- eike_corpus + klimarep_corpus
summary(de_corpus)
de_dfm <- dfm(de_corpus, remove_numbers = TRUE, remove_punct=TRUE, remove=de_stopwords)
#to get frequencies
de_freqs <- textstat_frequency(dfm_weight(de_dfm, scheme="prop"), groups=origin)
de_freqs
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_freqs <- textstat_frequency(dfm_weight(de_klima, scheme="prop"), groups=origin)
de_freqs
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
freqs.kr <- filter(de_freqs, group == "Klimareporter") %>% as.data.frame() %>% select(feature, frequency)
freqs <- left_join(freqs.eike, freqs.kr, by = "feature") %>% head(25) %>% arrange(frequency.x) %>% mutate(feature = factor(feature, feature))
ggplot(freqs) +
geom_segment(aes(x=feature, xend=feature, y=frequency.x, yend=frequency.y), color="grey") +
geom_point(aes(x=feature, y=frequency.x), color = "red", size = 3 ) +
geom_point(aes(x=feature, y=frequency.y), color = "lightblue", size = 3 ) +
ggtitle("Word Frquencies") +
xlab("") + ylab("Wortfrequenz") +
coord_flip()
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop") * 100
de_freqs <- textstat_frequency(de_relfreq, groups=origin)
de_freqs
de_relfreq
de_relfreq <- dfm_weight(dfm(tokens(de_corpus)), scheme="prop")
de_relfreq
topfeatures(de_relfreq, n=50)
de_klima <- dfm_select(de_relfreq, pattern="klima*")
topfeatures(de_klima)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(de_relfreq, groups=origin)
de_freqs
normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
install.packages('BBmisc')
normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
scale(de_freqs)
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
scale(de_freqs$frequency)
install.packages('ClusterSim')
install.packages('clusterSim')
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#scale(de_freqs$frequency, )
data.Normalization(de_freqs$frequency, type="n0", normalization="column")
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#scale(de_freqs$frequency, )
data.Normalization(de_freqs$frequency, type="n1", normalization="column")
library(clusterSim)
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#scale(de_freqs$frequency, )
data.Normalization(de_freqs$frequency, type="n1", normalization="column")
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#scale(de_freqs$frequency, )
data.Normalization(de_freqs$frequency, type="n1", normalization="column")
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
scale(de_freqs$frequency)
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
scale(de_freqs$frequency, scale=FALSE)
de_freqs
#normalize(de_freqs, method="standardize", range=c(0,1), margin=1L, on.constant="quiet")
#scale(de_freqs$frequency, scale=FALSE)
#data.Normalization(de_freqs$frequency, type="n1", normalization="column")
de_freqs$frequency <- scale(de_freqs$frequency, scale=FALSE)
de_freqs
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(scale(de_relfreq, scale=FALSE), groups=origin)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(dfm(scale(de_relfreq, scale=FALSE)), groups=origin)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(de_relfreq, groups=origin)
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(de_relfreq, groups=origin)
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
#de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(de_klima, groups=origin)
de_freqs
#to get klima words
de_klima <- dfm_select(de_dfm, pattern ="klima*")
de_relfreq <- dfm_weight(de_klima, scheme="prop")
de_freqs <- textstat_frequency(de_relfreq, groups=origin)
de_freqs
#plotting
freqs.eike <- filter(de_freqs, group == "EIKE") %>% as.data.frame() %>% select(feature, frequency)
head(de_dfm)
de_freqs <- textstat_frequency(de_dfm, groups=origin)
de_klima <- dfm_select(de_dfm, pattern="klima*")
de_freqs <- textstat_frequency(de_klima, groups=origin)
freqs.eike <- filter(de_freqs, group=="EIKE") %>% as.data.frame() %>% select(features, frequency)
#jpeg("eike_top50.jpeg", width=600, height=600)
textplot_wordcloud(eike_dfm, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#jpeg("eike_top50.jpeg", width=600, height=600)
textplot_wordcloud(eike_dfm, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
textplot_wordcloud(eike_klima, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#jpeg("fff_top50.jpeg", width=600, height=600)
textplot_wordcloud(fff_dfm, min_size=1, max_words=30,colors = RColorBrewer::brewer.pal(8, "Dark2") )
#dev.off()
#jpeg("klimarep_top50.jpeg", width=600, height=600)
textplot_wordcloud(klimarep_dfm, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
#dev.off()
textplot_wordcloud(klimarep_klima, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(klimarep_dfm, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(klimarep_klima, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(eike_dfm, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(eike_klima, min_size=1, max_words=30, colors = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_wordcloud(fff_dfm, min_size=1, max_words=30,colors = RColorBrewer::brewer.pal(8, "Dark2") )
klimarep_coll <- textstat_collocations(klimarep_corpus, min_count=3)
arrange(klimarep_coll, desc(count))
head(col)
col <- klimarep_corpus %>%
tokens_remove(stopwords("de")) %>%
tokens_select(pattern = "^[A-Z]", valuetype = "regex", case_insensitive = TRUE, padding = TRUE) %>%
textstat_collocations(min_count = 5, tolower = FALSE)
col <- tokens(klimarep_corpus) %>%
tokens_remove(stopwords("de")) %>%
tokens_select(pattern = "^[A-Z]", valuetype = "regex", case_insensitive = TRUE, padding = TRUE) %>%
textstat_collocations(min_count = 5, tolower = FALSE)
head(col)
col
col <- tokens(klimarep_corpus) %>%
tokens_select(pattern = "^[A-Z]", valuetype = "regex", case_insensitive = TRUE, padding = TRUE) %>%
textstat_collocations(min_count = 5, tolower = FALSE)
col
klimarep_coll <- textstat_collocations(klimarep_corpus, min_count=3)
arrange(klimarep_coll, desc(count))
klimarep_coll <- textstat_collocations(klimarep_corpus, min_count=3)
klimarep_coll1 <- arrange(klimarep_coll, desc(count))
write.csv(klima_rep_coll1, "klimarep_coll.csv")
klimarep_coll <- textstat_collocations(klimarep_corpus, min_count=3)
arrange(klimarep_coll, desc(count))
write.csv(klima_rep_coll, "klimarep_coll.csv")
klimarep_coll <- textstat_collocations(klimarep_corpus, min_count=3)
arrange(klimarep_coll, desc(count))
write.csv(klimarep_coll, "klimarep_coll.csv")
textplot_wordcloud(fff_climate, min_size=1, max_words=30,colors = RColorBrewer::brewer.pal(8, "Dark2") )
# load libraries
library(quanteda)
library(readtext)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tidyverse)
library(tm)
library("quanteda.textplots")
library("quanteda.textstats")
getwd()
setwd("/Users/anna/Documents/textmining/textmining_climate")
getwd()
# you can get current directory for importing the textfiles by setting current directory and open relative path from there with
#texts <- readtext("path/*")
#setwd("/Users/anna/Documents/textmining/textmining_climate")
# Climate Activists
#english
fff_texts <- readtext("text_files/pro/fff_texts/*")
#german
fff_de_texts <- readtext("text_files/pro/fff_de_texts/*")
ikem_texts <- readtext("text_files/pro/ikem_texts/*")
klimarep_texts <- readtext("text_files/pro/klimareporter_texts/*")
klimafakten_texts <- readtext("text_files/pro/klimafakten_texts/*")
zero_texts <- readtext("text_files/pro/germanzero_texts/*")
komma_texts <- readtext("text_files/pro/komma_texts/*")
# build corpus for each text with "origin" tag
fff_de_corpus <- corpus(fff_de_texts)
docvars(fff_corpus, "origin") <- "fff_de"
# build corpus for each text with "origin" tag
fff_de_corpus <- corpus(fff_de_texts)
docvars(fff_de_corpus, "origin") <- "fff_de"
ikem_corpus <- corpus(ikem_texts)
docvars(fff_corpus, "origin") <- "ikem"
# build corpus for each text with "origin" tag
fff_de_corpus <- corpus(fff_de_texts)
docvars(fff_de_corpus, "origin") <- "fff_de"
ikem_corpus <- corpus(ikem_texts)
docvars(ikem_corpus, "origin") <- "ikem"
klimarep_corpus <- corpus(klimarep_texts)
docvars(klimarep_corpus, "origin") <- "kr"
klimafakten_corpus <- corpus(klimafakten_texts)
docvars(klimafakten_corpus, "origin") <- "kf"
zero_corpus <- corpus(zero_texts)
docvars(zero_corpus, "origin") <- "zero"
komma_corpus <- corpus(komma_texts)
docvars(komma_corpus, "origin") <- "gk"
# build a pro corpus for all pro texts with "pro" group
pro_corpus <- fff_de_corpus+ikem_corpus+klimarep_corpus+klimafakten_corpus+zero_corpus+komma_corpus
#add tag here
# build a pro corpus for all pro texts with "pro" group
pro_corpus <- fff_de_corpus+ikem_corpus+klimarep_corpus+klimafakten_corpus+zero_corpus+komma_corpus
#add tag here
docvars(pro_corpus, "group") <- "activists"
summary(ikem_corpus, 5)
summary(ikem_corpus)
summary(ikem_corpus,10)
summary(pro_corpus,10)
# get random sample corpus for activists
pro2000 <- corpus_sample(pro_corpus, size=2000)
pro2000
summary(pro2000, 50)
summary(pro2000, 10)
# sceptics
eike_corpus <- corpus(eike_texts)
# Climate Change Deniers
eike_texts <- readtext("text_files/contra/eike_texts/*")
ffh_texts <- readtext("text_files/contra/ffh_texts/*")
# sceptics
eike_corpus <- corpus(eike_texts)
docvars(ffh_corpus, "origin") <- "ffh"
ffh_corpus <- corpus(ffh__texts)
ffh_texts <- readtext("text_files/contra/ffh_texts/*")
ffh_corpus <- corpus(ffh__texts)
ffh_corpus <- corpus(ffh_texts)
docvars(ffh_corpus, "origin") <- "ffh"
# sceptics corpus with "sceptics" group
sceptics_corpus <- eike_corpus+ffh_corpus
docvars(sceptics_corpus, "group") <- "sceptics"
summary(pro_corpus, 10)
summary(sceptics_corpus, 10)
# sceptics
eike_corpus <- corpus(eike_texts)
docvars(eike_corpus, "origin") <- "eike"
ffh_corpus <- corpus(ffh_texts)
docvars(ffh_corpus, "origin") <- "ffh"
# sceptics corpus with "sceptics" group
sceptics_corpus <- eike_corpus+ffh_corpus
docvars(sceptics_corpus, "group") <- "sceptics"
summary(sceptics_corpus, 10)
# get random sample corpus for sceptics
sceptics2000 <- corpus_sample(sceptics_corpus, size=2000)
summary(sceptics2000,10)
#summary(pro2000, 10)
summary(sceptics2000,50)
#summary(pro2000, 10)
summary(sceptics2000,10)
# sceptics corpus with "sceptics" group
contra_corpus <- eike_corpus+ffh_corpus
docvars(contra_corpus, "group") <- "sceptics"
summary(pro_corpus, 10)
summary(contra_corpus, 10)
# get random sample corpus for sceptics
contra2000 <- corpus_sample(contra_corpus, size=2000)
#summary(pro2000, 10)
summary(contra2000,10)
full_corpus <- pro2000+contra2000
summary(full_corpus)
summary(full_corpus,10)
summary(full_corpus,50)
summary(full_corpus,5)
summary(full_corpus,5, group="sceptics")
summary(full_corpus,5)
#english stopword list
en_stopwords <- stopwords::stopwords("en", source="snowball")
en_stopwords <- c(en_stopwords, "phqghume", "+")
#german stopword list
de_stopwords <- stopwords::stopwords("de", source="snowball")
de_stopwords <- c(de_stopwords, "dass", "=", "the", "seit", "ab", "beim", "mal", "c")
pro_dfm <- dfm(pro2000, remove=de_stopwords, remove_punct=TRUE, remove_numbers=TRUE)
contra_dfm <- dfm(contra2000, remove=de_stopwords, remove_punct=TRUE, remove_numbers=TRUE)
pro_dfm <- topfeatures(pro_dfm, 50) #top 50 words
contra_dfm <- topfeatures(contra_dfm, 50)
#To sort DFM: n = number of documents, nf = number of features
head(dfm_sort(pro_dfm, decreasing=TRUE, margin = "features"))
pro_dfm <- topfeatures(pro_dfm, 50) #top 50 words
pro_dfm <- dfm(pro2000, remove=de_stopwords, remove_punct=TRUE, remove_numbers=TRUE)
contra_dfm <- dfm(contra2000, remove=de_stopwords, remove_punct=TRUE, remove_numbers=TRUE)
pro_tf <- topfeatures(pro_dfm, 50) #top 50 words
contra_tf <- topfeatures(contra_dfm, 50)
pro_tf
contra_tf
#To sort DFM: n = number of documents, nf = number of features
head(dfm_sort(pro_dfm, decreasing=TRUE, margin = "features"))
